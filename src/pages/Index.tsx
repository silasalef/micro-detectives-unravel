
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { ChevronRight, ChevronLeft, Play, Users, Shield, Zap, Key, Factory, Lightbulb } from 'lucide-react';
import StorySlide from '@/components/StorySlide';
import InteractiveQuestion from '@/components/InteractiveQuestion';
import CharacterCard from '@/components/CharacterCard';
import MechanismDemo from '@/components/MechanismDemo';

const Index = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [audienceResponses, setAudienceResponses] = useState<string[]>([]);

  const slides = [
    {
      id: 'intro',
      title: 'üî¨ Bem-vindos, Exploradores da Sa√∫de!',
      content: 'Hoje vamos embarcar em uma aventura microsc√≥pica dentro do corpo humano. Preparem-se para descobrir como os antibi√≥ticos s√£o verdadeiros detetives que encontram e combatem os vil√µes invis√≠veis!',
      type: 'intro',
      icon: <Play className="w-8 h-8" />
    },
    {
      id: 'characters',
      title: 'üé≠ Conhe√ßam Nossos Personagens',
      content: 'Em nossa hist√≥ria, cada personagem tem um papel especial...',
      type: 'characters',
      icon: <Users className="w-8 h-8" />
    },
    {
      id: 'question1',
      title: 'ü§î Pergunta para Voc√™s!',
      content: 'Imaginem que voc√™s s√£o prefeitos da Cidade Corpo Humano. O que fariam se vil√µes come√ßassem a causar confus√£o na cidade?',
      type: 'question',
      icon: <Lightbulb className="w-8 h-8" />,
      options: [
        'Chamar a pol√≠cia (sistema imunol√≥gico)',
        'Usar armas especiais (antibi√≥ticos)',
        'Evacuar a cidade (descanso)',
        'Negociar com os vil√µes'
      ]
    },
    {
      id: 'secret',
      title: 'üîç O Segredo dos Antibi√≥ticos',
      content: 'Os antibi√≥ticos s√£o como agentes secretos super especializados! Eles t√™m um superpoder incr√≠vel: conseguem distinguir entre cidad√£os bons (nossas c√©lulas) e vil√µes (bact√©rias).',
      type: 'explanation',
      icon: <Shield className="w-8 h-8" />
    },
    {
      id: 'analogy',
      title: 'üîë A Analogia das Chaves e Fechaduras',
      content: 'Imaginem que as bact√©rias usam armaduras especiais que s√≥ elas t√™m. Os antibi√≥ticos s√£o como chaves m√°gicas que s√≥ abrem as "portas" dessas armaduras!',
      type: 'analogy',
      icon: <Key className="w-8 h-8" />
    },
    {
      id: 'mechanisms',
      title: '‚ö° Os Superpoderes dos Antibi√≥ticos',
      content: 'Cada tipo de antibi√≥tico tem um superpoder diferente para combater os vil√µes...',
      type: 'mechanisms',
      icon: <Zap className="w-8 h-8" />
    },
    {
      id: 'question2',
      title: 'üß† Desafio Mental!',
      content: 'Por que os antibi√≥ticos n√£o atacam nossas c√©lulas boas?',
      type: 'question',
      icon: <Lightbulb className="w-8 h-8" />,
      options: [
        'Porque nossas c√©lulas n√£o t√™m "armadura"',
        'Porque s√£o muito pequenos',
        'Porque s√£o programados assim',
        'Por sorte!'
      ]
    },
    {
      id: 'resistance',
      title: 'üé≠ Quando os Vil√µes Ficam Espertos',
      content: '√Äs vezes, os vil√µes aprendem truques novos e criam disfarces para enganar nossos her√≥is antibi√≥ticos...',
      type: 'resistance',
      icon: <Factory className="w-8 h-8" />
    },
    {
      id: 'conclusion',
      title: 'üèÜ A Moral da Hist√≥ria',
      content: 'Os antibi√≥ticos s√£o her√≥is incr√≠veis, mas precisam da nossa ajuda! Usar antibi√≥ticos corretamente √© como dar as melhores ferramentas para nossos agentes secretos.',
      type: 'conclusion',
      icon: <Shield className="w-8 h-8" />
    }
  ];

  const nextSlide = () => {
    if (currentSlide < slides.length - 1) {
      setCurrentSlide(currentSlide + 1);
    }
  };

  const prevSlide = () => {
    if (currentSlide > 0) {
      setCurrentSlide(currentSlide - 1);
    }
  };

  const handleResponse = (response: string) => {
    setAudienceResponses([...audienceResponses, response]);
  };

  const currentSlideData = slides[currentSlide];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
      {/* Header */}
      <div className="bg-white/80 backdrop-blur-sm border-b border-purple-200 p-4">
        <div className="max-w-6xl mx-auto flex justify-between items-center">
          <h1 className="text-2xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
            Como o Antibi√≥tico Sabe Onde Agir? ü¶†üíä
          </h1>
          <div className="text-sm text-gray-600">
            Slide {currentSlide + 1} de {slides.length}
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-6xl mx-auto p-6">
        <Card className="min-h-[600px] bg-white/90 backdrop-blur-sm border-2 border-purple-200 shadow-2xl">
          <CardContent className="p-8">
            <div className="flex items-center gap-4 mb-8">
              <div className="p-3 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full text-white">
                {currentSlideData.icon}
              </div>
              <h2 className="text-3xl font-bold text-gray-800">
                {currentSlideData.title}
              </h2>
            </div>

            {/* Slide Content */}
            {currentSlideData.type === 'intro' && (
              <StorySlide 
                content={currentSlideData.content}
                animation="fadeIn"
              />
            )}

            {currentSlideData.type === 'characters' && (
              <div className="space-y-6">
                <p className="text-lg text-gray-700 mb-8">{currentSlideData.content}</p>
                <div className="grid md:grid-cols-3 gap-6">
                  <CharacterCard
                    title="üèôÔ∏è Corpo Humano"
                    description="Uma grande cidade cheia de habitantes trabalhadores (nossas c√©lulas)"
                    color="from-green-400 to-green-600"
                  />
                  <CharacterCard
                    title="üëæ Bact√©rias"
                    description="Vil√µes invasores que causam problemas e confus√£o na cidade"
                    color="from-red-400 to-red-600"
                  />
                  <CharacterCard
                    title="ü¶∏ Antibi√≥ticos"
                    description="Her√≥is com superpoderes especiais para combater apenas os vil√µes"
                    color="from-blue-400 to-blue-600"
                  />
                </div>
              </div>
            )}

            {currentSlideData.type === 'question' && (
              <InteractiveQuestion
                question={currentSlideData.content}
                options={currentSlideData.options || []}
                onResponse={handleResponse}
              />
            )}

            {currentSlideData.type === 'explanation' && (
              <StorySlide 
                content={currentSlideData.content}
                animation="slideUp"
              />
            )}

            {currentSlideData.type === 'analogy' && (
              <div className="space-y-8">
                <StorySlide content={currentSlideData.content} animation="slideUp" />
                <div className="bg-gradient-to-r from-yellow-100 to-orange-100 p-6 rounded-2xl border-2 border-yellow-300">
                  <div className="flex items-center gap-4 text-lg">
                    <Key className="w-12 h-12 text-yellow-600" />
                    <span className="text-2xl">üîí</span>
                    <div className="text-gray-700">
                      <strong>Chave Antibi√≥tica</strong> + <strong>Fechadura Bacteriana</strong> = <strong>Vit√≥ria!</strong>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {currentSlideData.type === 'mechanisms' && (
              <div className="space-y-6">
                <p className="text-lg text-gray-700 mb-8">{currentSlideData.content}</p>
                <div className="grid md:grid-cols-2 gap-6">
                  <MechanismDemo
                    title="üî® Quebra-Armaduras"
                    subtitle="(Penicilina)"
                    description="Destr√≥i a armadura protetora das bact√©rias, fazendo-as explodir!"
                    color="from-red-400 to-red-600"
                  />
                  <MechanismDemo
                    title="üè≠ Sabotador de F√°bricas"
                    subtitle="(Tetraciclina)"
                    description="Impede que as bact√©rias fabriquem suas pe√ßas essenciais"
                    color="from-blue-400 to-blue-600"
                  />
                  <MechanismDemo
                    title="‚ö° Corta-Energia"
                    subtitle="(Sulfa)"
                    description="Bloqueia o combust√≠vel que as bact√©rias precisam para viver"
                    color="from-yellow-400 to-yellow-600"
                  />
                  <MechanismDemo
                    title="üîß Quebra-M√°quinas"
                    subtitle="(Quinolonas)"
                    description="Danifica as m√°quinas de copiar DNA das bact√©rias"
                    color="from-purple-400 to-purple-600"
                  />
                </div>
              </div>
            )}

            {currentSlideData.type === 'resistance' && (
              <div className="space-y-6">
                <StorySlide content={currentSlideData.content} animation="slideUp" />
                <div className="bg-gradient-to-r from-orange-100 to-red-100 p-6 rounded-2xl border-2 border-orange-300">
                  <div className="text-center">
                    <h3 className="text-xl font-bold text-red-700 mb-4">‚ö†Ô∏è Desafio Atual</h3>
                    <p className="text-gray-700 mb-4">
                      Alguns vil√µes criaram disfarces t√£o bons que nossos her√≥is n√£o conseguem mais reconhec√™-los!
                    </p>
                    <div className="text-lg font-semibold text-red-600">
                      Como podemos ajudar nossos her√≥is a vencer? ü§î
                    </div>
                  </div>
                </div>
              </div>
            )}

            {currentSlideData.type === 'conclusion' && (
              <div className="space-y-8">
                <StorySlide content={currentSlideData.content} animation="fadeIn" />
                <div className="bg-gradient-to-r from-green-100 to-blue-100 p-6 rounded-2xl border-2 border-green-300">
                  <div className="text-center">
                    <h3 className="text-2xl font-bold text-green-700 mb-4">üéØ Li√ß√µes Aprendidas</h3>
                    <div className="grid md:grid-cols-2 gap-4 text-left">
                      <div className="space-y-2">
                        <p className="flex items-center gap-2">
                          <span className="text-green-500">‚úÖ</span>
                          Usar antibi√≥ticos apenas quando prescritos
                        </p>
                        <p className="flex items-center gap-2">
                          <span className="text-green-500">‚úÖ</span>
                          Completar todo o tratamento
                        </p>
                      </div>
                      <div className="space-y-2">
                        <p className="flex items-center gap-2">
                          <span className="text-green-500">‚úÖ</span>
                          N√£o compartilhar antibi√≥ticos
                        </p>
                        <p className="flex items-center gap-2">
                          <span className="text-green-500">‚úÖ</span>
                          Ajudar nossos her√≥is microsc√≥picos!
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </CardContent>
        </Card>

        {/* Navigation */}
        <div className="flex justify-between items-center mt-8">
          <Button
            onClick={prevSlide}
            disabled={currentSlide === 0}
            variant="outline"
            size="lg"
            className="flex items-center gap-2"
          >
            <ChevronLeft className="w-5 h-5" />
            Anterior
          </Button>

          <div className="flex gap-2">
            {slides.map((_, index) => (
              <div
                key={index}
                className={`w-3 h-3 rounded-full transition-all duration-300 ${
                  index === currentSlide
                    ? 'bg-purple-500 scale-125'
                    : 'bg-gray-300'
                }`}
              />
            ))}
          </div>

          <Button
            onClick={nextSlide}
            disabled={currentSlide === slides.length - 1}
            size="lg"
            className="flex items-center gap-2 bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600"
          >
            Pr√≥ximo
            <ChevronRight className="w-5 h-5" />
          </Button>
        </div>
      </div>
    </div>
  );
};

export default Index;
